(window.webpackJsonp=window.webpackJsonp||[]).push([[745],{1059:function(n,s,t){"use strict";t.r(s);var a=t(7),e=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[s("strong",[n._v("如果你想查看更多 Mysql 常用函数及操作语法格式可以在以下文章找找哦")])]),n._v(" "),s("ul",[s("li",[s("p",[s("RouterLink",{attrs:{to:"/08.数据库/03.关系型数据库/02.Mysql/59.Mysql常用操作语句汇总.html"}},[n._v("Mysql常用操作语句汇总")])],1)]),n._v(" "),s("li",[s("p",[s("RouterLink",{attrs:{to:"/08.数据库/03.关系型数据库/02.Mysql/01.Mysql常用函数汇总.html"}},[n._v("Mysql常用函数的汇总")])],1)])]),n._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" "),s("strong",[n._v("前言")])]),n._v(" "),s("ul",[s("li",[n._v("实际工作中，每次查询基本都是需要结合多个表去查询数据，所以Mysql的"),s("strong",[n._v("多表查询")]),n._v("我们必须掌握")]),n._v(" "),s("li",[n._v("多表查询可以是两张表，也可以是很多张表，取决于需要查询的数据要"),s("strong",[n._v("关联多少张表")])])]),n._v(" "),s("h2",{attrs:{id:"有哪些多表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些多表查询"}},[n._v("#")]),n._v(" "),s("strong",[n._v("有哪些多表查询")])]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("cross join：交叉连接")])]),n._v(" "),s("li",[s("strong",[n._v("inner join：内连接")])]),n._v(" "),s("li",[s("strong",[n._v("left join：左外连接")])]),n._v(" "),s("li",[s("strong",[n._v("right join：右外连接")])]),n._v(" "),s("li",[s("strong",[n._v("union、union all：全连接")])])]),n._v(" "),s("h2",{attrs:{id:"多表查询的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表查询的区别"}},[n._v("#")]),n._v(" 多表查询的区别")]),n._v(" "),s("table",{attrs:{border:"0"}},[s("tbody",[s("tr",[s("td",[n._v("查询类型")]),s("td",[n._v("简述")])]),s("tr",[s("td",[n._v("inner join")]),s("td",[s("p",[n._v("获取两个表中字段相互匹配关系的记录")]),s("p",[n._v("即两表记录都不为null才会返回")])]),n._v("/td>")]),s("tr",[s("td",[n._v("left join")]),s("td",[s("p",[n._v("获取左表所有记录")]),s("p",[n._v("右表为空的字段补null")])])]),s("tr",[s("td",[n._v("right join")]),s("td",[s("p",[n._v("获取右表所有记录")]),s("p",[n._v("左表为空的字段补null")])])]),s("tr",[s("td",[n._v("union")]),s("td",[n._v("获取左右表所有记录")])]),s("tr",[s("td",[n._v("cross join")]),s("td",[n._v("两张表的笛卡尔积")]),s("td",[n._v(" ")])])])]),n._v(" "),s("h2",{attrs:{id:"执行sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行sql"}},[n._v("#")]),n._v(" 执行SQL")]),n._v(" "),s("p",[n._v("后面详细讲每种多表查询的时候，会用到这些数据表和数据；先跑一跑创建下哦！")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("DROP TABLE IF EXISTS `emp`;\nCREATE TABLE `emp`  (\n  `id` int(11) NOT NULL COMMENT '员工编号',\n  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '员工姓名',\n  `dept_id` int(11) NULL DEFAULT NULL COMMENT '部门编号',\n  `leader` int(11) NULL DEFAULT NULL COMMENT '直属领导id',\n  `is_enable` int(11) NULL DEFAULT NULL COMMENT '是否在职 1在职 0离职',\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\nINSERT INTO `emp` VALUES (1, '张三丰', 1, 0, 1);\nINSERT INTO `emp` VALUES (2, '张无忌', 1, 1, 1);\nINSERT INTO `emp` VALUES (3, '小龙女', 1, 1, 1);\nINSERT INTO `emp` VALUES (4, '小白菜', 1, 3, 1);\nINSERT INTO `emp` VALUES (5, '韦小宝', 2, 0, 1);\nINSERT INTO `emp` VALUES (6, '令狐冲', 2, 0, 1);\nINSERT INTO `emp` VALUES (7, '东方不败', 0, 8, 1);\nINSERT INTO `emp` VALUES (8, '任我行', 3, 0, 1);\nINSERT INTO `emp` VALUES (9, '李寻欢', 0, 8, 1);\n\nDROP TABLE IF EXISTS `dept`;\nCREATE TABLE `dept`  (\n  `id` int(11) NOT NULL COMMENT '部门id',\n  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '部门名称',\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\nINSERT INTO `dept` VALUES (1, '销售部');\nINSERT INTO `dept` VALUES (2, '信息技术部');\nINSERT INTO `dept` VALUES (3, '财务部');\nINSERT INTO `dept` VALUES (4, '有关部门');\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);