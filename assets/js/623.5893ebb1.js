(window.webpackJsonp=window.webpackJsonp||[]).push([[623],{938:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"设计模式之原型模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计模式之原型模式"}},[s._v("#")]),s._v(" 设计模式之原型模式")]),s._v(" "),t("h2",{attrs:{id:"意图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#意图"}},[s._v("#")]),s._v(" 意图")]),s._v(" "),t("p",[t("strong",[s._v("原型模式")]),s._v("（Prototype）是一种创建型设计模式， 使你能够复制已有对象， 而又无需使代码依赖它们所属的类。")]),s._v(" "),t("p",[s._v("原型模式主要用于对象的复制，它的核心是就是类图中的原型类 Prototype。Prototype 类需要具备以下两个条件：")]),s._v(" "),t("ul",[t("li",[s._v("实现 Cloneable 接口。在 java 语言有一个 Cloneable 接口，它的作用只有一个，就是在运行时通知虚拟机可以安全地在实现了此接口的类上使用 clone 方法。在 java 虚拟机中，只有实现了这个接口的类才可以被拷贝，否则在运行时会抛出 CloneNotSupportedException 异常。")]),s._v(" "),t("li",[s._v("重写 Object 类中的 clone 方法。Java 中，所有类的父类都是 Object 类，Object 类中有一个 clone 方法，作用是返回对象的一个拷贝，但是其作用域 protected 类型的，一般的类无法调用，因此，Prototype 类需要将 clone 方法的作用域修改为 public 类型。")])]),s._v(" "),t("h3",{attrs:{id:"浅拷贝与深拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝与深拷贝"}},[s._v("#")]),s._v(" 浅拷贝与深拷贝")]),s._v(" "),t("p",[s._v("浅拷贝是指当对象的字段值被复制时，字段引用的对象不会被复制。")]),s._v(" "),t("p",[s._v("例如：如果一个对象有一个指向字符串的字段，并且我们对该对象做了一个浅拷贝，那麽两个对象将引用同一个字符串。")]),s._v(" "),t("p",[s._v("深拷贝是指当一个类拥有资源，当这个类的对象发生复制过程的时候，资源重新分配，这个过程就是深拷贝。")]),s._v(" "),t("h2",{attrs:{id:"适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[s._v("#")]),s._v(" 适用场景")]),s._v(" "),t("ul",[t("li",[s._v("如果你需要复制一些对象， 同时又希望代码独立于这些对象所属的具体类， 可以使用原型模式。")]),s._v(" "),t("li",[s._v("如果子类的区别仅在于其对象的初始化方式， 那么你可以使用该模式来减少子类的数量。 别人创建这些子类的目的可能是为了创建特定类型的对象。")])]),s._v(" "),t("h2",{attrs:{id:"结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[s._v("#")]),s._v(" 结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://www.yuyanqing.cn/oss/image-bed/snap/20210506094301.png",alt:"img"}})]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("原型")]),s._v(" （Prototype） 接口将对克隆方法进行声明。 在绝大多数情况下， 其中只会有一个名为 "),t("code",[s._v("clone")]),s._v("克隆的方法。")]),s._v(" "),t("li",[t("strong",[s._v("具体原型")]),s._v(" （Concrete Prototype） 类将实现克隆方法。 除了将原始对象的数据复制到克隆体中之外， 该方法有时还需处理克隆过程中的极端情况， 例如克隆关联对象和梳理递归依赖等等。")]),s._v(" "),t("li",[t("strong",[s._v("客户端")]),s._v(" （Client） 可以复制实现了原型接口的任何对象。")])]),s._v(" "),t("h2",{attrs:{id:"伪代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#伪代码"}},[s._v("#")]),s._v(" 伪代码")]),s._v(" "),t("p",[s._v("在本例中， "),t("strong",[s._v("原型")]),s._v("模式能让你生成完全相同的几何对象副本， 同时无需代码与对象所属类耦合。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://www.yuyanqing.cn/oss/image-bed/snap/20210506095002.png",alt:"img"}})]),s._v(" "),t("p",[s._v("所有形状类都遵循同一个提供克隆方法的接口。 在复制自身成员变量值到结果对象前， 子类可调用其父类的克隆方法。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 基础原型。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" is\n    field "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n    field "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Y")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n    field color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 常规构造函数。")]),s._v("\n    constructor "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原型构造函数。使用已有对象的数值来初始化一个新对象。")]),s._v("\n    constructor "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("X")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("X")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Y")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// clone（克隆）操作会返回一个形状子类。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" method "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 具体原型。克隆方法会创建一个新对象并将其传递给构造函数。直到构造函数运")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 行完成前，它都拥有指向新克隆对象的引用。因此，任何人都无法访问未完全生")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 成的克隆对象。这可以保持克隆结果的一致。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" is\n    field width"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n    field height"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n\n    constructor "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要调用父构造函数来复制父类中定义的私有成员变量。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("width "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("width\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("height "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("height\n\n    method "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" is\n    field radius"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n\n    constructor "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("radius "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("radius\n\n    method "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 客户端代码中的某个位置。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Application")]),s._v(" is\n    field shapes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" array of "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v("\n\n    constructor "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),s._v(" circle "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("circle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("X")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("circle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n        circle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("radius "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n        shapes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("circle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),s._v(" anotherCircle "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" circle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        shapes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("anotherCircle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量 `anotherCircle（另一个圆）`与 `circle（圆）`对象的内")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 容完全一样。")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),s._v(" rectangle "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rectangle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        rectangle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("width "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n        rectangle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("height "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n        shapes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rectangle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    method "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("businessLogic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原型是很强大的东西，因为它能在不知晓对象类型的情况下生成一个与")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其完全相同的复制品。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),s._v(" shapesCopy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),s._v(" of "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shapes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如，我们不知晓形状数组中元素的具体类型，只知道它们都是形状。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 但在多态机制的帮助下，当我们在某个形状上调用 `clone（克隆）`")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法时，程序会检查其所属的类并调用其中所定义的克隆方法。这样，")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们将获得一个正确的复制品，而不是一组简单的形状对象。")]),s._v("\n        foreach "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s in shapes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n            shapesCopy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// `shapesCopy（形状副本）`数组中包含 `shape（形状）`数组所有")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子元素的复制品。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br")])]),t("h2",{attrs:{id:"案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[s._v("#")]),s._v(" 案例")]),s._v(" "),t("p",[t("strong",[s._v("使用示例：")]),s._v(" Java 的 "),t("code",[s._v("Cloneable")]),s._v(" （可克隆） 接口就是立即可用的原型模式。")]),s._v(" "),t("p",[s._v("任何类都可通过实现该接口来实现可被克隆的性质。")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("java.lang.Object#clone()")]),t("OutboundLink")],1),s._v(" （类必须实现 "),t("a",{attrs:{href:"http://docs.oracle.com/javase/8/docs/api/java/lang/Cloneable.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("java.lang.Cloneable")]),t("OutboundLink")],1),s._v(" 接口）")])]),s._v(" "),t("p",[t("strong",[s._v("识别方法")]),s._v("： 原型可以简单地通过 "),t("code",[s._v("clone")]),s._v("或 "),t("code",[s._v("copy")]),s._v("等方法来识别。")]),s._v(" "),t("h2",{attrs:{id:"与其他模式的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与其他模式的关系"}},[s._v("#")]),s._v(" 与其他模式的关系")]),s._v(" "),t("ul",[t("li",[s._v("在许多设计工作的初期都会使用"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[s._v("工厂方法模式"),t("OutboundLink")],1),s._v(" （较为简单， 而且可以更方便地通过子类进行定制）， 随后演化为使用"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/abstract-factory",target:"_blank",rel:"noopener noreferrer"}},[s._v("抽象工厂模式"),t("OutboundLink")],1),s._v("、 "),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型模式"),t("OutboundLink")],1),s._v("或"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/builder",target:"_blank",rel:"noopener noreferrer"}},[s._v("生成器模式"),t("OutboundLink")],1),s._v(" （更灵活但更加复杂）。")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/abstract-factory",target:"_blank",rel:"noopener noreferrer"}},[s._v("抽象工厂模式"),t("OutboundLink")],1),s._v("通常基于一组"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[s._v("工厂方法"),t("OutboundLink")],1),s._v("， 但你也可以使用"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型模式"),t("OutboundLink")],1),s._v("来生成这些类的方法。")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型"),t("OutboundLink")],1),s._v("可用于保存"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/command",target:"_blank",rel:"noopener noreferrer"}},[s._v("命令模式"),t("OutboundLink")],1),s._v("的历史记录。")]),s._v(" "),t("li",[s._v("大量使用"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/composite",target:"_blank",rel:"noopener noreferrer"}},[s._v("组合模式"),t("OutboundLink")],1),s._v("和"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/decorator",target:"_blank",rel:"noopener noreferrer"}},[s._v("装饰模式"),t("OutboundLink")],1),s._v("的设计通常可从对于"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型"),t("OutboundLink")],1),s._v("的使用中获益。 你可以通过该模式来复制复杂结构， 而非从零开始重新构造。")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型"),t("OutboundLink")],1),s._v("并不基于继承， 因此没有继承的缺点。 另一方面， "),t("em",[s._v("原型")]),s._v("需要对被复制对象进行复杂的初始化。 "),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[s._v("工厂方法"),t("OutboundLink")],1),s._v("基于继承， 但是它不需要初始化步骤。")]),s._v(" "),t("li",[s._v("有时候"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型"),t("OutboundLink")],1),s._v("可以作为"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/memento",target:"_blank",rel:"noopener noreferrer"}},[s._v("备忘录模式"),t("OutboundLink")],1),s._v("的一个简化版本， 其条件是你需要在历史记录中存储的对象的状态比较简单， 不需要链接其他外部资源， 或者链接可以方便地重建。")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/abstract-factory",target:"_blank",rel:"noopener noreferrer"}},[s._v("抽象工厂"),t("OutboundLink")],1),s._v("、 "),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/builder",target:"_blank",rel:"noopener noreferrer"}},[s._v("生成器"),t("OutboundLink")],1),s._v("和"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型"),t("OutboundLink")],1),s._v("都可以用"),t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/singleton",target:"_blank",rel:"noopener noreferrer"}},[s._v("单例模式"),t("OutboundLink")],1),s._v("来实现。")])]),s._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://book.douban.com/subject/2243615/",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Head First 设计模式》"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://book.douban.com/subject/2334288/",target:"_blank",rel:"noopener noreferrer"}},[s._v("《大话设计模式》"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/catalog",target:"_blank",rel:"noopener noreferrer"}},[s._v("设计模式教程"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);