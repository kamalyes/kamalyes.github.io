(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{454:function(s,n,a){"use strict";a.r(n);var e=a(7),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript-继承模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-继承模式"}},[s._v("#")]),s._v(" JavaScript 继承模式")]),s._v(" "),n("h2",{attrs:{id:"原型链继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承"}},[s._v("#")]),s._v(" 原型链继承")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("套路")]),s._v(" "),n("ul",[n("li",[s._v("定义父类型构造函数")]),s._v(" "),n("li",[s._v("给父类型的原型添加方法")]),s._v(" "),n("li",[s._v("定义子类型的构造函数")]),s._v(" "),n("li",[s._v("创建父类型的对象赋值给子类型的原型")]),s._v(" "),n("li",[s._v("将子类型原型的构造属性设置为子类型")]),s._v(" "),n("li",[s._v("给子类型原型添加方法")]),s._v(" "),n("li",[s._v("创建子类型的对象: 可以调用父类型的方法")])])]),s._v(" "),n("li",[n("p",[s._v("关键")]),s._v(" "),n("ul",[n("li",[s._v("子类型的原型为父类型的一个实例对象")])])]),s._v(" "),n("li",[n("p",[s._v("原型链继承是为了得到父类型中的方法")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('   //父类型\nfunction Supper() {\n    this.supProp = "Supper property";\n}\nSupper.prototype.showSupperProp = function () {\n    console.log(this.supProp);\n};\n\n    //子类型\nfunction Sub() {\n    this.subProp = "Sub property";\n}\n\n    // 子类型的原型为父类型的一个实例对象\n    Sub.prototype = new Supper();\n\n    // 让子类型的原型的constructor指向子类型\n    Sub.prototype.constructor = Sub;\n\nSub.prototype.showSubProp = function () {\n    console.log(this.subProp);\n};\n\n    let sub = new Sub();\n    sub.showSupperProp();\n    sub.showSubProp();\n\n    console.log(sub); // Sub\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"原型链继承图解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承图解"}},[s._v("#")]),s._v(" 原型链继承图解")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://www.yuyanqing.cn/oss/image-bed/col/frontend/76ffb5be2deb4ccab024155534208b20.png",alt:"原型链继承图解"}})]),s._v(" "),n("h2",{attrs:{id:"借用构造函数继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数继承"}},[s._v("#")]),s._v(" 借用构造函数继承")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("套路:")]),s._v(" "),n("ul",[n("li",[s._v("定义父类型构造函数")]),s._v(" "),n("li",[s._v("定义子类型构造函数")]),s._v(" "),n("li",[s._v("在子类型构造函数中调用父类型构造")])])]),s._v(" "),n("li",[n("p",[s._v("关键:")]),s._v(" "),n("ul",[n("li",[s._v("在子类型构造函数中通过 call()调用父类型构造函数")])])]),s._v(" "),n("li",[n("p",[s._v("借用构造函数继承是为了得到父类型的属性")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\nfunction Student(name, age, price) {\n    Person.call(this, name, age);\n    // 相当于是借用了Person这个函数\n    /*this.name = name\n    this.age = age*/\n    this.price = price;\n}\n\n    let s = new Student("Tom", 20, 14000);\n    console.log(s.name, s.age, s.price);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"原型链-借用构造函数组合继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链-借用构造函数组合继承"}},[s._v("#")]),s._v(" 原型链+借用构造函数组合继承")]),s._v(" "),n("ul",[n("li",[s._v("利用原型链实现对父类型对象的方法继承")]),s._v(" "),n("li",[s._v("利用 super()借用父类型构建函数初始化相同属性")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\nPerson.prototype.setName = function (name) {\n    this.name = name;\n};\n\nfunction Student(name, age, price) {\n    Person.call(this, name, age); // 为了得到属性\n    this.price = price;\n}\n    Student.prototype = new Person(); // 为了能看到父类型的方法\n    Student.prototype.constructor = Student; //修正constructor属性\n    Student.prototype.setPrice = function (price) {\n        this.price = price;\n    };\n\n    let s = new Student("Tom", 24, 15000);\n    s.setName("Bob");\n    s.setPrice(16000);\n    console.log(s.name, s.age, s.price);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"补充"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[s._v("#")]),s._v(" 补充")]),s._v(" "),n("h3",{attrs:{id:"new-一个对象背后到底做了什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-一个对象背后到底做了什么"}},[s._v("#")]),s._v(" new 一个对象背后到底做了什么？")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("创建一个空对象")])]),s._v(" "),n("li",[n("p",[s._v("给对象设置 "),n("code",[s._v("__proto__")]),s._v("属性,属性值为构造函数对象的"),n("code",[s._v("prototype")]),s._v("的属性值")])]),s._v(" "),n("li",[n("p",[s._v("执行构造函数体（给对象添加属性/方法）")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);