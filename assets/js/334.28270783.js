(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{650:function(s,a,t){"use strict";t.r(a);var e=t(7),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"docker-三要素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-三要素"}},[s._v("#")]),s._v(" Docker 三要素")]),s._v(" "),a("p",[s._v("Docker 本身是一个容器运行载体或者称之为管理引擎。我们把应用程序和配置依赖打包好形成一个可交付的运行环境，这个打包好的运行环境就是 image 镜像文件。 只有通过这个镜像文件才能生成 Docker 容器。image 镜像文件可以看做是容器的模板。 Docker 根据 image 文件生成容器的实例。 同一个 image 文件，可以生成多个同时运行的容器实例。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".image文件生成的容器实例，本身也是一个文件，称为镜像文件；\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".一个容器运行一种服务，当我们需要的时候，就可以通过docker客户端创建一个对应的运行实例，也就是我们的容器；\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".仓库，就是放了一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候从仓库中拉下来就可以了。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[s._v("#")]),s._v(" 仓库")]),s._v(" "),a("p",[s._v("仓库是集中存放镜像文件的场所，分为公开仓库和私有仓库两种形式。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("最大的公开仓库是Docker Hub "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("https://hub.docker.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，存放了数量庞大的镜像供用户下载。国内的公开仓库包括阿里云、网易云等。\n\n仓库和仓库注册服务器是有区别的，仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[s._v("#")]),s._v(" 镜像")]),s._v(" "),a("p",[s._v("镜像：Docker 镜像是一个只读的模板，镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。容器与镜像的关系类似于面向对象编程中的对象和类。")]),s._v(" "),a("h2",{attrs:{id:"容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),a("p",[s._v("容器：容器是用镜像创建的运行实例，可以把容器看做一个简易版的 Linux 环境和运行在其中的应用程序。每个容器都是相互隔离的、保证安全的平台。容器的最上面那一层是可读可写的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);