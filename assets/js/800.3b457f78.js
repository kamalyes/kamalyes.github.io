(window.webpackJsonp=window.webpackJsonp||[]).push([[800],{1112:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"elasticsearch-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-简介"}},[s._v("#")]),s._v(" Elasticsearch 简介")]),s._v(" "),t("p",[s._v("Elasticsearch 是一个基于 Lucene 的搜索和数据分析工具，它提供了一个分布式服务。Elasticsearch 是遵从 Apache 开源条款的一款开源产品，是当前主流的企业级搜索引擎。")]),s._v(" "),t("p",[s._v("它用于全文搜索、结构化搜索、分析以及将这三者混合使用：")]),s._v(" "),t("ul",[t("li",[s._v("维基百科使用 Elasticsearch 提供全文搜索并高亮关键字，以及**输入实时搜索(search-as-you-type)"),t("strong",[s._v("和")]),s._v("搜索纠错(did-you-mean)**等搜索建议功能。")]),s._v(" "),t("li",[s._v("英国卫报使用 Elasticsearch 结合用户日志和社交网络数据提供给他们的编辑以实时的反馈，以便及时了解公众对新发表的文章的回应。")]),s._v(" "),t("li",[s._v("StackOverflow 结合全文搜索与地理位置查询，以及"),t("strong",[s._v("more-like-this")]),s._v("功能来找到相关的问题和答案。")]),s._v(" "),t("li",[s._v("Github 使用 Elasticsearch 检索 1300 亿行的代码。")])]),s._v(" "),t("h2",{attrs:{id:"elasticsearch-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-特点"}},[s._v("#")]),s._v(" Elasticsearch 特点")]),s._v(" "),t("ul",[t("li",[s._v("分布式的实时文件存储，每个字段都被索引并可被搜索；")]),s._v(" "),t("li",[s._v("分布式的实时分析搜索引擎；")]),s._v(" "),t("li",[s._v("可弹性扩展到上百台服务器规模，处理 PB 级结构化或非结构化数据；")]),s._v(" "),t("li",[s._v("开箱即用（安装即可使用），它提供了许多合理的缺省值，并对初学者隐藏了复杂的搜索引擎理论。只需很少的学习既可在生产环境中使用。")])]),s._v(" "),t("h2",{attrs:{id:"elasticsearch-发展历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-发展历史"}},[s._v("#")]),s._v(" Elasticsearch 发展历史")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("2010 年 2 月 8 日，Elasticsearch 第一个公开版本发布。")])]),s._v(" "),t("li",[t("p",[s._v("2010 年 5 月 14 日，发布第一个具有里程碑意义的初始版本 "),t("strong",[s._v("0.7.0")]),s._v(" ，具有如下特征：")])]),s._v(" "),t("li",[t("p",[s._v("Zen Discovery 自动发现模块；")]),s._v(" "),t("ul",[t("li",[s._v("支持 Groovy Client；")])])]),s._v(" "),t("li",[t("p",[s._v("简单的插件管理机制；")]),s._v(" "),t("ul",[t("li",[s._v("更好地支持 icu 分词器；")])])]),s._v(" "),t("li",[t("p",[s._v("更多的管理 api。")])]),s._v(" "),t("li",[t("p",[s._v("2013 年初，GitHub 抛弃了 Solr，采取 ElasticSearch 来做其 PB 级的搜索。")])]),s._v(" "),t("li",[t("p",[s._v("2014 年 2 月 14 日，发布 "),t("strong",[s._v("1.0.0")]),s._v(" 版本，增加如下重要特性：")])]),s._v(" "),t("li",[t("p",[s._v("支持 Snapshot/Restore API 备份恢复 API；")]),s._v(" "),t("ul",[t("li",[s._v("支持聚合分析 Aggregations；")])])]),s._v(" "),t("li",[t("p",[s._v("支持 cat api；")]),s._v(" "),t("ul",[t("li",[s._v("支持断路器；")])])]),s._v(" "),t("li",[t("p",[s._v("引入 Doc values。")])]),s._v(" "),t("li",[t("p",[s._v("2015 年 10 月 28 日，发布 "),t("strong",[s._v("2.0.0")]),s._v(" 版本，有如下重要特性：")])]),s._v(" "),t("li",[t("p",[s._v("增加了 Pipleline Aggregations；")]),s._v(" "),t("ul",[t("li",[s._v("query/filter 查询合并，都合并到 query 中，根据不同的上下文执行不同的查询；")])])]),s._v(" "),t("li",[t("p",[s._v("压缩存储可配置；")]),s._v(" "),t("ul",[t("li",[s._v("Rivers 模块被移除；")])])]),s._v(" "),t("li",[t("p",[s._v("Multicast 组播发现被移除，成为一个插件，生产环境必须配置单播地址。")])]),s._v(" "),t("li",[t("p",[s._v("2016 年 10 月 26 日，发布 "),t("strong",[s._v("5.0.0")]),s._v(" 版本，有如下重大特性变化：")])]),s._v(" "),t("li",[t("p",[s._v("Lucene 6.x 的支持，磁盘空间少一半；索引时间少一半；查询性能提升 25%；支持 IPV6；")]),s._v(" "),t("ul",[t("li",[s._v("Internal Engine 级别移除了用于避免同一文档并发更新的竞争锁，带来 15%-20% 的性能提升；")])])]),s._v(" "),t("li",[t("p",[s._v("Shrink API，它可将分片数进行收缩成它的因数，如之前你是 15 个分片，你可以收缩成 5 个或者 3 个又或者 1 个，那么我们就可以想象成这样一种场景，在写入压力非常大的收集阶段，设置足够多的索引，充分利用 shard 的并行写能力，索引写完之后收缩成更少的 shard，提高查询性能；")]),s._v(" "),t("ul",[t("li",[s._v("提供了第一个 Java 原生的 REST 客户端 SDK；")])])]),s._v(" "),t("li",[t("p",[s._v("IngestNode，之前如果需要对数据进行加工，都是在索引之前进行处理，比如 logstash 可以对日志进行结构化和转换，现在直接在 es 就可以处理了；")]),s._v(" "),t("ul",[t("li",[s._v("提供了 Painless 脚本，代替 Groovy 脚本；")]),s._v(" "),t("li",[s._v("移除 site plugins，就是说 head、bigdesk 都不能直接装 es 里面了，不过可以部署独立站点（反正都是静态文件）或开发 kibana 插件；")]),s._v(" "),t("li",[s._v("新增 Sliced Scroll 类型，现在 Scroll 接口可以并发来进行数据遍历了。每个 Scroll 请求，可以分成多个 Slice 请求，可以理解为切片，各 Slice 独立并行，利用 Scroll 重建或者遍历要快很多倍；")]),s._v(" "),t("li",[s._v("新增了 Profile API；")]),s._v(" "),t("li",[s._v("新增了 Rollover API；")]),s._v(" "),t("li",[s._v("新增 Reindex；")]),s._v(" "),t("li",[s._v("引入新的字段类型 Text/Keyword 来替换 String；")]),s._v(" "),t("li",[s._v("限制索引请求大小，避免大量并发请求压垮 ES；")]),s._v(" "),t("li",[s._v("限制单个请求的 shards 数量，默认 1000 个。")])])]),s._v(" "),t("li",[t("p",[s._v("2017 年 8 月 31 日，发布 "),t("strong",[s._v("6.0.0")]),s._v(" 版本，具有如下重要特性：")])]),s._v(" "),t("li",[t("p",[s._v("稀疏性 Doc Values 的支持；")]),s._v(" "),t("ul",[t("li",[s._v("Index Sorting，即索引阶段的排序；")])])]),s._v(" "),t("li",[t("p",[s._v("顺序号的支持，每个 es 的操作都有一个顺序编号（类似增量设计）；")]),s._v(" "),t("ul",[t("li",[s._v("无缝滚动升级；")])])]),s._v(" "),t("li",[t("p",[s._v("从 6.0 开始不支持一个 index 里面存在多个 type；")]),s._v(" "),t("ul",[t("li",[s._v("Index-template inheritance，索引版本的继承，目前索引模板是所有匹配的都会合并，这样会造成索引模板有一些冲突问题， 6.0 将会只匹配一个，索引创建时也会进行验证；")]),s._v(" "),t("li",[s._v("Load aware shard routing， 基于负载的请求路由，目前的搜索请求是全节点轮询，那么性能最慢的节点往往会造成整体的延迟增加，新的实现方式将基于队列的耗费时间自动调节队列长度，负载高的节点的队列长度将减少，让其他节点分摊更多的压力，搜索和索引都将基于这种机制；")]),s._v(" "),t("li",[s._v("已经关闭的索引将也支持 replica 的自动处理，确保数据可靠。")])])]),s._v(" "),t("li",[t("p",[s._v("2019 年 4 月 10 日，发布 "),t("strong",[s._v("7.0.0")]),s._v(" 版本，具有如下重要特性：")])]),s._v(" "),t("li",[t("p",[s._v("集群连接变化：TransportClient 被废弃，es7 的 java 代码，只能使用 restclient；对于 java 编程，建议采用 High-level-rest-client 的方式操作 ES 集群；")]),s._v(" "),t("ul",[t("li",[s._v("ES 程序包默认打包 jdk：7.x 版本的程序包大小变成 300MB+，对比 6.x，包大了 200MB+，这正是 JDK 的大小；")])])]),s._v(" "),t("li",[t("p",[s._v("采用基于 Lucene 9.0；")]),s._v(" "),t("ul",[t("li",[s._v("正式废除单个索引下多 Type 的支持，es6 时，官方就提到了 es7 会删除 type，并且 es6 时，已经规定每一个 index 只能有一个 type。在 es7 中，使用默认的 _doc 作为 type，官方说在 8.x 版本会彻底移除 type。api 请求方式也发送变化，如获得某索引的某 ID 的文档：GET index/_doc/id 其中 index 和 id 为具体的值；")])])]),s._v(" "),t("li",[t("p",[s._v("引入了真正的内存断路器，它可以更精准地检测出无法处理的请求，并防止它们使单个节点不稳定；")]),s._v(" "),t("ul",[t("li",[s._v("Zen2 是 Elasticsearch 的全新集群协调层，提高了可靠性、性能和用户体验，变得更快、更安全，并更易于使用。")])])])]),s._v(" "),t("h2",{attrs:{id:"elasticsearch-概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-概念"}},[s._v("#")]),s._v(" Elasticsearch 概念")]),s._v(" "),t("p",[s._v("下列有一些概念是 Elasticsearch 的核心。从一开始就理解这些概念将极大地帮助简化学习 Elasticsearch 的过程。")]),s._v(" "),t("h3",{attrs:{id:"近实时-nrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#近实时-nrt"}},[s._v("#")]),s._v(" 近实时（NRT）")]),s._v(" "),t("p",[s._v("Elasticsearch 是一个近乎实时的搜索平台。这意味着"),t("strong",[s._v("从索引文档到可搜索文档的时间有一点延迟")]),s._v("（通常是一秒）。")]),s._v(" "),t("h3",{attrs:{id:"索引-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-index"}},[s._v("#")]),s._v(" 索引（Index）")]),s._v(" "),t("p",[s._v("索引在不同语境，有着不同的含义")]),s._v(" "),t("ul",[t("li",[s._v("索引（名词）：一个 "),t("strong",[s._v("索引")]),s._v(" 类似于传统关系数据库中的一个 "),t("strong",[s._v("数据库")]),s._v(" ，是一个存储关系型文档的容器。 索引 ("),t("em",[s._v("index")]),s._v(") 的复数词为 indices 或 indexes 。索引实际上是指向一个或者多个"),t("strong",[s._v("物理分片")]),s._v("的"),t("strong",[s._v("逻辑命名空间")]),s._v(" 。")]),s._v(" "),t("li",[s._v("索引（动词）：索引一个文档 就是存储一个文档到一个 "),t("em",[s._v("索引")]),s._v(" （名词）中以便被检索和查询。这非常类似于 SQL 语句中的 "),t("code",[s._v("INSERT")]),s._v(" 关键词，除了文档已存在时，新文档会替换旧文档情况之外。")]),s._v(" "),t("li",[s._v("倒排索引：关系型数据库通过增加一个索引比如一个 B 树索引到指定的列上，以便提升数据检索速度。Elasticsearch 和 Lucene 使用了一个叫做 "),t("strong",[s._v("倒排索引")]),s._v(" 的结构来达到相同的目的。")])]),s._v(" "),t("p",[s._v("索引的 Mapping 和 Setting")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("Mapping")])]),s._v(" 定义文档字段的类型")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("Setting")])]),s._v(" 定义不同的数据分布")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"settings"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... any settings ... "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"mappings"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type_one"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... any mappings ... "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type_two"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... any mappings ... "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        ...\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h4",{attrs:{id:"倒排索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[s._v("#")]),s._v(" 倒排索引")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://www.yuyanqing.cn/oss/image-bed/snap/20220108215559.PNG",alt:"img"}})]),s._v(" "),t("h4",{attrs:{id:"index-template"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#index-template"}},[s._v("#")]),s._v(" index template")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("index template")])]),s._v("（索引模板）帮助用户设定 Mapping 和 Setting，并按照一定的规则，自动匹配到新创建的索引之上。")]),s._v(" "),t("ul",[t("li",[s._v("模板仅在一个索引被创建时，才会产生作用。修改模板不会影响已创建的索引。")]),s._v(" "),t("li",[s._v("你可以设定多个索引模板，这些设置会被 merge 在一起。")]),s._v(" "),t("li",[s._v("你可以指定 order 的数值，控制 merge 的过程。")])]),s._v(" "),t("p",[s._v("当新建一个索引时")]),s._v(" "),t("ul",[t("li",[s._v("应用 ES 默认的 Mapping 和 Setting")]),s._v(" "),t("li",[s._v("应用 order 数值低的 index template 中的设定")]),s._v(" "),t("li",[s._v("应用 order 数值高的 index template 中的设定，之前的设定会被覆盖")]),s._v(" "),t("li",[s._v("应用创建索引是，用户所指定的 Mapping 和 Setting，并覆盖之前模板中的设定。")])]),s._v(" "),t("p",[s._v("示例：创建默认索引模板")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("PUT _template/template_default\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index_patterns"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"settings"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number_of_shards"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number_of_replicas"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nPUT /_template/template_test\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index_patterns"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"settings"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number_of_shards"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number_of_replicas"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mappings"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"date_detection"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"numeric_detection"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看索引模板")]),s._v("\nGET /_template/template_default\nGET /_template/temp*\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#写入新的数据，index以test开头")]),s._v("\nPUT testtemplate/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"someNumber"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"someDate"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019/01/01"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nGET testtemplate/_mapping\nGET testtemplate/_settings\n\nPUT testmy\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"settings"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number_of_replicas"')]),s._v(":5\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nPUT testmy/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nGET testmy/_settings\nDELETE testmy\nDELETE /_template/template_default\nDELETE /_template/template_test\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br")])]),t("h4",{attrs:{id:"dynamic-template"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-template"}},[s._v("#")]),s._v(" dynamic template")]),s._v(" "),t("ul",[t("li",[s._v("根据 ES 识别的数据类型，结合字段名称，来动态设定字段类型\n"),t("ul",[t("li",[s._v("所有的字符串类型都设定成 Keyword，或者关闭 keyword 字段。")]),s._v(" "),t("li",[s._v("is 开头的字段都设置成 boolean")]),s._v(" "),t("li",[s._v("long_ 开头的都设置成 long 类型")])])]),s._v(" "),t("li",[s._v("dynamic template 是定义在某个索引的 Mapping 中")]),s._v(" "),t("li",[s._v("template 有一个名称")]),s._v(" "),t("li",[s._v("匹配规则是一个数组")]),s._v(" "),t("li",[s._v("为匹配到字段设置 Mapping")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Dynaminc Mapping 根据类型和字段名")]),s._v("\nDELETE my_index\n\nPUT my_index/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"firstName"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ruan"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"isVIP"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nGET my_index/_mapping\n\nDELETE my_index\nPUT my_index\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mappings"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dynamic_templates"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strings_as_boolean"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_mapping_type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v(",\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"is*"')]),s._v(",\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mapping"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"boolean"')]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strings_as_keywords"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_mapping_type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v(",\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mapping"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"keyword"')]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nGET my_index/_mapping\n\nDELETE my_index\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#结合路径")]),s._v("\nPUT my_index\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mappings"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dynamic_templates"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"full_name"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path_match"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name.*"')]),s._v(",\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path_unmatch"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.middle"')]),s._v(",\n          "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mapping"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(",\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"copy_to"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"full_name"')]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nGET my_index/_mapping\n\n\nPUT my_index/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"middle"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Winston"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Lennon"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nGET my_index/_search?q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("full_name:John\nDELETE my_index\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br")])]),t("h3",{attrs:{id:"类型-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型-type"}},[s._v("#")]),s._v(" "),t("s",[s._v("类型（Type）")])]),s._v(" "),t("p",[t("s",[s._v("type 是一个逻辑意义上的分类或者叫分区，允许在同一索引中建立多个 type。本质是相当于一个过滤条件，高版本将会废弃 type 概念。")])]),s._v(" "),t("blockquote",[t("p",[t("s",[t("strong",[s._v("6.0.0 版本及之后，废弃 type")])])])]),s._v(" "),t("h3",{attrs:{id:"文档-document"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档-document"}},[s._v("#")]),s._v(" 文档（Document）")]),s._v(" "),t("p",[s._v("Elasticsearch 是面向文档的，"),t("strong",[s._v("文档是所有可搜索数据的最小单位")]),s._v("。")]),s._v(" "),t("p",[s._v("Elasticsearch 使用 "),t("a",{attrs:{href:"http://en.wikipedia.org/wiki/Json",target:"_blank",rel:"noopener noreferrer"}},[t("em",[s._v("JSON")]),t("OutboundLink")],1),s._v(" 作为文档的序列化格式。")]),s._v(" "),t("p",[s._v("在索引/类型中，可以根据需要存储任意数量的文档。")]),s._v(" "),t("p",[s._v("每个文档都有一个 "),t("strong",[s._v("Unique ID")])]),s._v(" "),t("ul",[t("li",[s._v("用户可以自己指定")]),s._v(" "),t("li",[s._v("或通过 Elasticsearch 自动生成")])]),s._v(" "),t("h4",{attrs:{id:"文档的元数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档的元数据"}},[s._v("#")]),s._v(" 文档的元数据")]),s._v(" "),t("p",[s._v("一个文档不仅仅包含它的数据 ，也包含"),t("strong",[s._v("元数据")]),s._v(" —— 有关文档的信息。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("_index")]),s._v("：文档在哪存放")]),s._v(" "),t("li",[t("code",[s._v("_type")]),s._v("：文档表示的对象类别")]),s._v(" "),t("li",[t("code",[s._v("_id")]),s._v("：文档唯一标识")]),s._v(" "),t("li",[t("code",[s._v("_source")]),s._v("：文档的原始 Json 数据")]),s._v(" "),t("li",[t("code",[s._v("_all")]),s._v("：整合所有字段内容到该字段，已被废除")]),s._v(" "),t("li",[t("code",[s._v("_version")]),s._v("：文档的版本信息")]),s._v(" "),t("li",[t("code",[s._v("_score")]),s._v("：相关性打分")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"megacorp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"employee"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_version"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"found"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_source"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"first_name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"last_name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Smith"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"age"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"about"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I love to go rock climbing"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"interests"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sports"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"music"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"节点-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点-node"}},[s._v("#")]),s._v(" 节点（Node）")]),s._v(" "),t("h4",{attrs:{id:"节点简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点简介"}},[s._v("#")]),s._v(" 节点简介")]),s._v(" "),t("p",[s._v("一个运行中的 Elasticsearch 实例称为一个"),t("strong",[s._v("节点")]),s._v("。")]),s._v(" "),t("p",[s._v("Elasticsearch 实例本质上是一个 Java 进程。一台机器上可以运行多个 Elasticsearch 进程，但是生产环境建议一台机器上只运行一个 Elasticsearch 进程")]),s._v(" "),t("p",[s._v("每个节点都有名字，通过配置文件配置，或启动时通过 "),t("code",[s._v("-E node.name=node1")]),s._v(" 指定。")]),s._v(" "),t("p",[s._v("每个节点在启动后，会分配一个 UID，保存在 "),t("code",[s._v("data")]),s._v(" 目录下。")]),s._v(" "),t("h4",{attrs:{id:"节点类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点类型"}},[s._v("#")]),s._v(" 节点类型")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("主节点（master node）")]),s._v("：每个节点都保存了集群的状态，只有 master 节点才能修改集群的状态信息（保证数据一致性）。"),t("strong",[s._v("集群状态")]),s._v("，维护了以下信息：\n"),t("ul",[t("li",[s._v("所有的节点信息")]),s._v(" "),t("li",[s._v("所有的索引和其相关的 mapping 和 setting 信息")]),s._v(" "),t("li",[s._v("分片的路由信息")])])]),s._v(" "),t("li",[t("strong",[s._v("候选节点（master eligible node）")]),s._v("：master eligible 节点可以参加选主流程。第一个启动的节点，会将自己选举为 mater 节点。\n"),t("ul",[t("li",[s._v("每个节点启动后，默认为 master eligible 节点，可以通过配置 "),t("code",[s._v("node.master: false")]),s._v(" 禁止")])])]),s._v(" "),t("li",[t("strong",[s._v("数据节点（data node）")]),s._v("：负责保存分片数据。")]),s._v(" "),t("li",[t("strong",[s._v("协调节点（coordinating node）")]),s._v("：负责接收客户端的请求，将请求分发到合适的接地那，最终把结果汇集到一起。每个 Elasticsearch 节点默认都是协调节点（coordinating node）。")]),s._v(" "),t("li",[t("strong",[s._v("冷/热节点（warm/hot node）")]),s._v("：针对不同硬件配置的数据节点（data node），用来实现 Hot & Warm 架构，降低集群部署的成本。")]),s._v(" "),t("li",[t("strong",[s._v("机器学习节点（machine learning node）")]),s._v("：负责执行机器学习的 Job，用来做异常检测。")])]),s._v(" "),t("h4",{attrs:{id:"节点配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点配置"}},[s._v("#")]),s._v(" 节点配置")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("配置参数")]),s._v(" "),t("th",[s._v("默认值")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("node.master")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td",[s._v("是否为主节点")])]),s._v(" "),t("tr",[t("td",[s._v("node.data")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td",[s._v("是否为数据节点")])]),s._v(" "),t("tr",[t("td",[s._v("node.ingest")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("node.ml")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td",[s._v("是否为机器学习节点（需要开启 x-pack）")])])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("建议")])]),s._v(" "),t("p",[s._v("开发环境中一个节点可以承担多种角色。但是，在生产环境中，节点应该设置为单一角色。")])]),s._v(" "),t("h3",{attrs:{id:"集群-cluster"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群-cluster"}},[s._v("#")]),s._v(" 集群（Cluster）")]),s._v(" "),t("h4",{attrs:{id:"集群简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群简介"}},[s._v("#")]),s._v(" 集群简介")]),s._v(" "),t("p",[s._v("拥有相同 "),t("code",[s._v("cluster.name")]),s._v(" 配置的 Elasticsearch 节点组成一个"),t("strong",[s._v("集群")]),s._v("。 "),t("code",[s._v("cluster.name")]),s._v(" 默认名为 "),t("code",[s._v("elasticsearch")]),s._v("，可以通过配置文件修改，或启动时通过 "),t("code",[s._v("-E cluster.name=xxx")]),s._v(" 指定。")]),s._v(" "),t("p",[s._v("当有节点加入集群中或者从集群中移除节点时，集群将会重新平均分布所有的数据。")]),s._v(" "),t("p",[s._v("当一个节点被选举成为主节点时，它将负责管理集群范围内的所有变更，例如增加、删除索引，或者增加、删除节点等。 而主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，即使流量增加，它也不会成为瓶颈。 任何节点都可以成为主节点。")]),s._v(" "),t("p",[s._v("作为用户，我们可以将请求发送到集群中的任何节点 ，包括主节点。 每个节点都知道任意文档所处的位置，并且能够将我们的请求直接转发到存储我们所需文档的节点。 无论我们将请求发送到哪个节点，它都能负责从各个包含我们所需文档的节点收集回数据，并将最终结果返回給客户端。 Elasticsearch 对这一切的管理都是透明的。")]),s._v(" "),t("h4",{attrs:{id:"集群健康"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群健康"}},[s._v("#")]),s._v(" 集群健康")]),s._v(" "),t("p",[s._v("Elasticsearch 的集群监控信息中包含了许多的统计数据，其中最为重要的一项就是 "),t("em",[s._v("集群健康")]),s._v(" ， 它在 "),t("code",[s._v("status")]),s._v(" 字段中展示为 "),t("code",[s._v("green")]),s._v(" 、 "),t("code",[s._v("yellow")]),s._v(" 或者 "),t("code",[s._v("red")]),s._v(" 。")]),s._v(" "),t("p",[s._v("在一个不包含任何索引的空集群中，它将会有一个类似于如下所示的返回内容：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"cluster_name"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"elasticsearch"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"status"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"green"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"timed_out"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"number_of_nodes"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"number_of_data_nodes"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"active_primary_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"active_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"relocating_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"initializing_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"unassigned_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"delayed_unassigned_shards"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"number_of_pending_tasks"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"number_of_in_flight_fetch"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"task_max_waiting_in_queue_millis"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"active_shards_percent_as_number"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("code",[s._v("status")]),s._v(" 字段指示着当前集群在总体上是否工作正常。它的三种颜色含义如下：")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("green")])]),s._v("：所有的主分片和副本分片都正常运行。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("yellow")])]),s._v("：所有的主分片都正常运行，但不是所有的副本分片都正常运行。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("red")])]),s._v("：有主分片没能正常运行。")])]),s._v(" "),t("h3",{attrs:{id:"分片-shards"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分片-shards"}},[s._v("#")]),s._v(" 分片（Shards）")]),s._v(" "),t("h4",{attrs:{id:"分片简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分片简介"}},[s._v("#")]),s._v(" 分片简介")]),s._v(" "),t("p",[s._v("索引实际上是指向一个或者多个"),t("strong",[s._v("物理分片")]),s._v("的"),t("strong",[s._v("逻辑命名空间")]),s._v(" 。")]),s._v(" "),t("p",[s._v("一个分片是一个底层的工作单元 ，它仅保存了全部数据中的一部分。一个分片可以视为一个 Lucene 的实例，并且它本身就是一个完整的搜索引擎。 我们的文档被存储和索引到分片内，但是应用程序是直接与索引而不是与分片进行交互。")]),s._v(" "),t("p",[s._v("Elasticsearch 是利用分片将数据分发到集群内各处的。分片是数据的容器，文档保存在分片内，分片又被分配到集群内的各个节点里。 当你的集群规模扩大或者缩小时， Elasticsearch 会自动的在各节点中迁移分片，使得数据仍然均匀分布在集群里。")]),s._v(" "),t("h4",{attrs:{id:"主分片和副分片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主分片和副分片"}},[s._v("#")]),s._v(" 主分片和副分片")]),s._v(" "),t("p",[s._v("分片分为主分片（Primary Shard）和副分片（Replica Shard）。")]),s._v(" "),t("p",[s._v("主分片：用于解决数据水平扩展的问题。通过主分片，可以将数据分布到集群内不同节点上。")]),s._v(" "),t("ul",[t("li",[s._v("索引内任意一个文档都归属于一个主分片。")]),s._v(" "),t("li",[s._v("主分片数在索引创建时指定，后序不允许修改，除非 Reindex")])]),s._v(" "),t("p",[s._v("副分片（Replica Shard）：用于解决数据高可用的问题。副分片是主分片的拷贝。副本分片作为硬件故障时保护数据不丢失的冗余备份，并为搜索和返回文档等读操作提供服务。")]),s._v(" "),t("ul",[t("li",[s._v("副分片数可以动态调整")]),s._v(" "),t("li",[s._v("增加副本数，还可以在一定程度上提高服务的可用性（读取的吞吐）")])]),s._v(" "),t("p",[s._v("对于生产环境中分片的设定，需要提前做好容量规划")]),s._v(" "),t("p",[s._v("分片数过小")]),s._v(" "),t("ul",[t("li",[s._v("无法水平扩展")]),s._v(" "),t("li",[s._v("单个分片的数量太大，导致数据重新分配耗时")])]),s._v(" "),t("p",[s._v("分片数过大")]),s._v(" "),t("ul",[t("li",[s._v("影响搜索结果的相关性打分，影响统计结果的准确性")]),s._v(" "),t("li",[s._v("单节点上过多的分片，会导致资源浪费，同时也会影响性能")])]),s._v(" "),t("h3",{attrs:{id:"副本-replicas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#副本-replicas"}},[s._v("#")]),s._v(" 副本（Replicas）")]),s._v(" "),t("p",[s._v("副本主要是针对主分片（Shards）的复制，Elasticsearch 中主分片可以拥有 0 个或多个的副本。")]),s._v(" "),t("p",[s._v("副本分片的主要目的就是为了故障转移。")]),s._v(" "),t("p",[s._v("分片副本很重要，主要有两个原因：")]),s._v(" "),t("ul",[t("li",[s._v("它在分片或节点发生故障时提供高可用性。因此，副本分片永远不会在与其复制的主分片相同的节点；")]),s._v(" "),t("li",[s._v("副本分片也可以接受搜索的请求，可以并行搜索，从而提高系统的吞吐量。")])]),s._v(" "),t("blockquote",[t("p",[s._v("每个 Elasticsearch 分片都是 Lucene 索引。单个 Lucene 索引中可以包含最大数量的文档。截止 LUCENE-5843，限制是 2,147,483,519（= "),t("code",[s._v("Integer.MAX_VALUE")]),s._v(" - 128）文档。您可以使用_cat/shardsAPI 监控分片大小。")])]),s._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.elastic.co/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Elasticsearch 官网"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-intro.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Elasticsearch 简介"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);